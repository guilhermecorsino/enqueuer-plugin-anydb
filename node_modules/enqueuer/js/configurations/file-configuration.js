"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const yml_object_parser_1 = require("../object-parser/yml-object-parser");
const fs = __importStar(require("fs"));
class FileConfiguration {
    constructor(filename) {
        try {
            const fileContent = fs.readFileSync(filename).toString();
            const ymlObjectParser = new yml_object_parser_1.YmlObjectParser();
            this.parsedFile = ymlObjectParser.parse(fileContent);
        }
        catch (err) {
            throw (`Error loading configuration file: ${err}`);
        }
    }
    getLogLevel() {
        return this.parsedFile['log-level'];
    }
    getOutputs() {
        return this.parsedFile.outputs || [];
    }
    getStore() {
        return this.parsedFile.store || {};
    }
    getPlugins() {
        return this.parsedFile.plugins || [];
    }
    isParallelExecution() {
        return !!this.parsedFile.parallel;
    }
    getFiles() {
        return this.parsedFile.files || [];
    }
    getMaxReportLevelPrint() {
        return this.parsedFile.maxReportLevelPrint;
    }
}
exports.FileConfiguration = FileConfiguration;
