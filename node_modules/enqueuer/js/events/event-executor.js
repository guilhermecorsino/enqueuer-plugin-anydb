"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const logger_1 = require("../loggers/logger");
const event_code_generator_1 = require("../code-generators/event-code-generator");
class EventExecutor {
    constructor(thisArg, eventName, componentName) {
        this.arguments = [];
        this.thisArg = thisArg;
        this.eventName = eventName;
        this.event = this.initializeEvent(this.thisArg[eventName]);
        if (componentName) {
            this.addArgument(componentName, thisArg);
        }
    }
    addArgument(name, value) {
        this.arguments.push({ name: name, value: value });
    }
    execute() {
        logger_1.Logger.debug(`Executing '${this.eventName}' hook`);
        logger_1.Logger.trace(`'${this.eventName}': ${JSON.stringify(this.event)}`);
        return new event_code_generator_1.EventCodeGenerator(this.thisArg, this.eventName).run(this.arguments);
    }
    initializeEvent(event) {
        let result = {
            script: '',
            store: {},
            assertions: []
        };
        if (event) {
            result = {
                script: event.script || '',
                store: event.store || {},
                assertions: this.baptizeAssertions(event.assertions || [])
            };
        }
        return result;
    }
    baptizeAssertions(assertions) {
        return assertions.map((assertion, index) => {
            if (!assertion.name) {
                assertion.name = `Assertion #${index}`;
            }
            return assertion;
        });
    }
}
exports.EventExecutor = EventExecutor;
