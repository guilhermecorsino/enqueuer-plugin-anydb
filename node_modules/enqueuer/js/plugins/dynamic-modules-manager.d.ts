import { ProtocolManager } from './protocol-manager';
import { ReportFormatterManager } from './report-formatter-manager';
import { ObjectParserManager } from './object-parser-manager';
import { AsserterManager } from './asserter-manager';
export declare class DynamicModulesManager {
    private static instance;
    private readonly protocolManager;
    private readonly reportFormatterManager;
    private readonly objectParserManager;
    private readonly asserterManager;
    private readonly builtInModules;
    private readonly implicitModules;
    private readonly explicitModules;
    private constructor();
    static getInstance(): DynamicModulesManager;
    getBuiltInModules(): string[];
    getImplicitModules(): string[];
    getLoadedModules(): {
        implicit: string[];
        explicit: string[];
    };
    getProtocolManager(): ProtocolManager;
    getAsserterManager(): AsserterManager;
    getReportFormatterManager(): ReportFormatterManager;
    getObjectParserManager(): ObjectParserManager;
    describeLoadedModules(): void;
    loadModuleExplicitly(module: string): boolean;
    findEveryEnqueuerImplicitPluginPackage(pattern: string): string[];
    private static versionMatches;
    private loadModule;
    private findEveryEntryPointableBuiltInModule;
    private initialModulesLoad;
}
