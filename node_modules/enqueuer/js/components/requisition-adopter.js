"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const id_generator_1 = require("../strings/id-generator");
class RequisitionAdopter {
    constructor(node) {
        this.defaultModel = {
            subscriptions: [],
            publishers: [],
            requisitions: [],
            delay: 0,
            iterations: 1,
            level: 0,
            parallel: false,
            ignore: false,
        };
        this.requisition = this.baptiseRequisition(node, node.name ? node.name : `Requisition #0`);
    }
    getRequisition() {
        return this.requisition;
    }
    baptiseRequisition(requisition, name, parent) {
        requisition = Object.assign({}, this.defaultModel, requisition);
        this.putNameAndId(requisition, name, parent);
        requisition.requisitions = requisition.requisitions
            .map((child, index) => {
            child.level = requisition.level + 1;
            return this.baptiseRequisition(child, `Requisition #${index}`, requisition);
        });
        requisition.publishers = requisition.publishers
            .map((publisher, index) => this.putNameAndId(publisher, `Publisher #${index}`, requisition));
        requisition.subscriptions = requisition.subscriptions
            .map((subscription, index) => this.putNameAndId(subscription, `Subscription #${index}`, requisition));
        return requisition;
    }
    putNameAndId(component, name, parent) {
        if (!component.name && name) {
            component.name = name;
        }
        if (!component.id) {
            component.id = new id_generator_1.IdGenerator(component).generateId();
        }
        if (parent) {
            component.parent = parent;
        }
        return component;
    }
}
exports.RequisitionAdopter = RequisitionAdopter;
