"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const date_controller_1 = require("../../timers/date-controller");
const event_1 = require("../../models/events/event");
class RequisitionDefaultReports {
    static createDefaultReport(base, onFinishTests = []) {
        const valid = onFinishTests.every((test) => test.valid);
        return {
            valid: valid,
            name: base.name,
            id: base.id,
            ignored: base.ignored,
            level: base.level,
            subscriptions: [],
            publishers: [],
            iterations: base.iterations,
            totalIterations: base.totalIterations,
            hooks: {
                [event_1.DefaultHookEvents.ON_INIT]: {
                    arguments: {},
                    valid: true,
                    tests: [],
                },
                [event_1.DefaultHookEvents.ON_FINISH]: {
                    arguments: {},
                    valid: valid,
                    tests: onFinishTests,
                },
            },
            time: {
                startTime: new date_controller_1.DateController().toString(),
                endTime: new date_controller_1.DateController().toString(),
                totalTime: 0
            },
            requisitions: []
        };
    }
    static createRunningError(base, err) {
        return RequisitionDefaultReports.createDefaultReport(base, [{
                valid: false,
                name: 'Requisition ran',
                description: err
            }]);
    }
    static createSkippedReport(base) {
        return RequisitionDefaultReports.createDefaultReport(base, [{
                valid: true,
                name: 'Requisition skipped',
                description: 'There is no iterations set to this requisition'
            }]);
    }
    static createIgnoredReport(base) {
        base.ignored = true;
        return RequisitionDefaultReports.createDefaultReport(base);
    }
    static createIteratorReport(base) {
        return RequisitionDefaultReports.createDefaultReport(base);
    }
}
exports.RequisitionDefaultReports = RequisitionDefaultReports;
