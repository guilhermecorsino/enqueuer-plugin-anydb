import { SubscriptionModel } from '../models/inputs/subscription-model';
import { Event } from '../models/events/event';
export declare abstract class Subscription {
    name: string;
    messageReceived?: any;
    timeout?: number;
    onMessageReceived?: Event;
    onFinish?: Event;
    response?: any;
    type: string;
    avoid: boolean;
    ignore: boolean;
    [propName: string]: any;
    protected constructor(subscriptionAttributes: SubscriptionModel);
    abstract subscribe(): Promise<void>;
    abstract receiveMessage(): Promise<void>;
    unsubscribe(): Promise<void>;
    sendResponse(): Promise<void>;
    registerHookEventExecutor(hookEventExecutor: (eventName: string, args: any) => void): void;
    protected executeHookEvent(hookName: string, args?: any): void;
}
